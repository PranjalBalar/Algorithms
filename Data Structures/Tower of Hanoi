# -*- coding: utf-8 -*-

#This program solves a hanoi tower using stacks
#There are 3 stacks that represent the different towers

class Stack:
    def __init__ (self):
        self.a = []
        self.index = 0
        
    def push(self, x):
        self.a.append(x)
        self.index += 1
        return self.a
    
    def pop(self):
        self.index -= 1
        return self.a.pop()
    
    def peek(self):
        return self.a[-1]
    
stack1 = Stack()
stack2 = Stack()
stack3 = Stack()

def move(s1, s2):
    if s1.index == 0:
        print "Empty S1" 
    elif s2.index == 0:
        s2.push(s1.pop())
    elif s2.peek() > s1.peek():
        s2.push(s1.pop())
    else:
        print "Can't move"

stack1.push(8)
stack1.push(7)
stack1.push(6)
stack1.push(5)        
stack1.push(4)
stack1.push(3)
stack1.push(2)
stack1.push(1)
print "Unsolved Hanoi Tower"
print stack1.a
print stack2.a
print stack3.a
print " "

def rec(x, t, u, s):
        if x == 1:
            move(s, t)
        else:
            rec(x-1, u, t, s)
            move(s, t)
            rec(x-1, t, s, u)

rec(8, stack3, stack2, stack1)
print"Solved Hanoi Tower"
print stack1.a
print stack2.a
print stack3.a